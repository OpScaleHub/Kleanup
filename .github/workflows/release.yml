# /.github/workflows/release.yml
name: Release Workflow

on:
  # Trigger build/test on pushes to main and pull requests,
  # AND trigger the FULL release process ONLY when a SemVer tag is pushed
  push:
    branches:
      - main
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'    # Matches vX.Y.Z
      - 'v[0-9]+.[0-9]+.[0-9]+-*' # Matches vX.Y.Z-prerelease.tag
    # Apply path filters to both branch pushes and tag pushes
    # (The build-test job runs on both, the release job filters by tag presence)
    paths:
      - '**/*.go'
      - 'go.mod'
      - 'go.sum'

  # Trigger build/test on pull requests
  pull_request:
    paths:
      - '**/*.go'
      - 'go.mod'
      - 'go.sum'

  # Allow manual triggering
  workflow_dispatch:

jobs:
  # Job 1: Build and Test (Continuous Integration)
  # Runs on pushes to main, pull requests, AND tag pushes (acts as a gate for release)
  build-test:
    name: Build and Test on Multiple OS
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        # No deep clone needed just for build/test

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23'
          # Enable caching for Go modules and build cache
          cache: true

      - name: Install dependencies
        run: go mod tidy

      - name: Run tests
        run: go test ./...

  # Job 2: Create GitHub Release (using GoReleaser)
  # Runs ONLY when a SemVer tag is pushed AND build-test job succeeds.
  release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    # Ensure build & test passes before releasing
    needs: build-test
    # IMPORTANT: Condition to run *only* on tag pushes matching the 'v*' pattern
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          # Fetch all history and tags for GoReleaser changelog generation
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23'
          # Enable caching for Go modules and build cache (speeds up GoReleaser build)
          cache: true

      # REMOVED: The 'Ensure Git Tag' step is removed.
      # We rely on the manually pushed SemVer tag that triggered this workflow.

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v4 # Consider updating to v5
        with:
          # 'latest' automatically uses the latest GoReleaser version
          version: latest
          # 'release' uses the tag, builds, generates changelog, creates GitHub Release
          # '--clean' removes the dist folder before building (recommended)
          args: release --clean
        env:
          # GITHUB_TOKEN is required for GoReleaser to create the release and upload assets
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # Optional: If you use CGO and need to disable it for cross-compilation
          # CGO_ENABLED: 0

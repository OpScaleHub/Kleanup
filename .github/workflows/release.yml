name: Release Workflow

on:
  push:
    branches:
      - main
    paths:
      - '**/*.go'
      - 'go.mod'
      - 'go.sum'
      - 'rebuild.trigger'
  pull_request:
    paths:
      - '**/*.go'
      - 'go.mod'
      - 'go.sum'
  workflow_dispatch: # Allow manual triggering of the workflow

jobs:
  build-test:
    name: Build and Test on Multiple OS
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23'

      - name: Install dependencies
        run: go mod tidy

      - name: Run tests
        run: go test ./...

  versioning:
    name: Determine Next Version
    runs-on: ubuntu-latest
    needs: build-test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main' # Restrict to push on main branch
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23'

      - name: Install GoReleaser
        run: go install github.com/goreleaser/goreleaser@latest

      - name: Determine version and generate changelog
        id: versioning
        run: goreleaser release --snapshot --skip-publish --rm-dist

  release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: versioning
    if: github.event_name == 'push' && github.ref == 'refs/heads/main' # Restrict to push on main branch
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23'

      - name: Ensure Git Tag
        run: |
          # Check if the current commit doesn't already have a tag
          if [ -z "$(git tag --points-at HEAD)" ]; then
            echo "No tag found at HEAD. Creating a new tag."
            git config user.name "GitHub Actions"
            git config user.email "actions@github.com"
            # Corrected git tag command: removed extra text after the message quotes
            TAG_NAME="v$(date +'%Y.%m.%d.%H%M%S')"
            echo "Creating tag: $TAG_NAME"
            git tag -a "$TAG_NAME" -m "Automated timestamp tag"
            echo "Pushing tag $TAG_NAME to origin."
            git push origin "$TAG_NAME"
          else
            echo "Tag already exists at HEAD. Skipping tag creation."
          fi
        # Note: GoReleaser will typically use the latest tag found unless configured otherwise.
        # This step ensures *a* tag exists if none points to the current commit.

      - name: Create GitHub Release
        id: release
        uses: goreleaser/goreleaser-action@v4
        with:
          version: latest
          args: release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
